{
  "New SolidJS Page": {
    "prefix": "newsolidpage",
    "scope": "typescript,javascript,javascriptreact,typescriptreact",
    "body": ["export default function ${1:MyAwesome}Page() {", "  return <></>;", "}"],
    "description": "Creates a new page in SolidJS."
  },

  "New SolidJS Component": {
    "prefix": "newsolidcomponent",
    "scope": "javascriptreact,typescriptreact",
    "body": [
      "import { mergeProps, ${2|VoidProps,FlowProps|} } from 'solid-js';",
      "",
      "type ${1:MyComponent}Props = {};",
      "",
      "export default function ${1:MyComponent}(props: ${2|VoidProps,FlowProps|}<${1:MyComponent}Props>) {",
      "  const defaultProps = mergeProps(",
      "    {",
      "      // Add default values here.",
      "    },",
      "    props",
      "  );",
      "",
      "  return <></>;",
      "}",
      ""
    ],
    "description": "Creates a new SolidJS Component"
  },

  "New SolidJS Context File": {
    "prefix": "newsolidcontext",
    "scope": "typescript,javascript,javascriptreact,typescriptreact",
    "body": [
      "import {",
      "  createContext,",
      "  createSignal,",
      "  FlowComponent,",
      "  useContext,",
      "  type Accessor,",
      "  type Setter",
      "} from 'solid-js';",
      "",
      "// ===========================================================================",
      "// Context",
      "// ===========================================================================",
      "",
      "export type ${1:CounterContext}Value = {",
      "  count: Accessor<number>",
      "  setCount: Setter<number>",
      "}",
      "",
      "const ${1:CounterContext} = createContext({",
      "  count: () => 0,",
      "  setCount: (newCount: number) => {}",
      "});",
      "",
      "// ===========================================================================",
      "// Hook",
      "// ===========================================================================",
      "export const use${1:CounterContext} = () => useContext(${1:CounterContext});",
      "",
      "// ===========================================================================",
      "// Provider",
      "// ===========================================================================",
      "export const ${1:CounterContext}Provider: FlowComponent = (props) => {",
      "  const [count, setCount] = createSignal(0);",
      "",
      "  return (",
      "    <${1:CounterContext}.Provider",
      "      value={{",
      "        count: count,",
      "        setCount: setCount",
      "      }}",
      "    >",
      "      {props.children}",
      "    </${1:CounterContext}.Provider>",
      "  );",
      "};",
      ""
    ],
    "description": "New SolidJS Context File"
  },

  "Comment Headers (TS)": {
    "scope": "typescript,javascript,javascriptreact,typescriptreact",
    "prefix": "commentheaders",
    "body": [
      "// ===========================================================================",
      "// ${1:Comment Headers}",
      "// ==========================================================================="
    ],
    "description": "Makes a comment header to subsection the content in your files."
  },

  // Vike
  "Vike +data.ts": {
    "prefix": "newvikedata",
    "scope": "typescript,javascript",
    "body": [
      "import { PageContext } from 'vike/types';",
      "",
      "export type Data = ReturnType<Awaited<typeof data>>;",
      "",
      "export async function data(pageContext: PageContext) {",
      "  const result = await fetch('https://jsonplaceholder.typicode.com/todos/1');",
      "  const data = await result.json();",
      "",
      "  return {",
      "    todo: data as { userId: number; id: number; title: string; completed: boolean },",
      "  };",
      "}"
    ],
    "description": "Vike +data.ts"
  }
}
